#--------------------------------------------
# C language project template
#
# default folder structure as follows
# <project root folder>
#      cmake/   <- here the additional modules with handy macro and finders
#      include/
#      src/
#      test/
#
#--------------------------------------------
cmake_minimum_required(VERSION 2.6 FATAL_ERROR)

# rename to your name here
set(PROJECT_NAME any_your_name_here)

# define project for C language
project(${PROJECT_NAME} C)

# enable TDD
include(CTest)
enable_testing()

# set where to find additional cmake modules if any
# comment it out if not required
set(CMAKE_MODULE_PATH ${PROJECT_SOURCE_DIR}/cmake ${CMAKE_MODULE_PATH})

# user controlled options for build
#option(USE_FEATURE1 "Product should be build with option FEATURE1 enabled" OFF)
#option(USE_FEATURE2 "Product should be build with option FEATURE2 enabled" OFF)
#option(USE_FEATURE3 "Product should be build with option FEATURE3 enabled" OFF)

# add include path for project
# add additional path if required
include_directories(${PROJECT_SOURCE_DIR}/include)

# get all *.c files from src to build target
file(GLOB SRC_FILES ${PROJECT_SOURCE_DIR}/src/*.c)
source_group("Source Files" FILES ${SRC_FILES})

# build target
add_executable(${PROJECT_NAME} ${SRC_FILES})

# linker command - add additional libraries for build target
#target_link_libraries(${PROJECT_NAME})
